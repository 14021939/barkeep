# This file gets placed into /etc/nginx/sites-enabled/barkeep
# Modified from Unicorn's sample nginx configuration.

# Render this file using ERB. It requires the params:
#   - hostname
#   - unicorn_socket - the filename of the socket on which the unicorn master listens

# Cache static assets in nginx (on disk). 100MB of cache; expires after 1 hour.
proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=assets:100m inactive=60m;
proxy_temp_path /var/lib/nginx/proxy 1 2;

upstream barkeep {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  # for UNIX domain socket setups:
  server unix:<%= unicorn_socket %> fail_timeout=0;
}

server {
  listen 80 default deferred;

  client_max_body_size 4G;
  server_name <%= hostname %> localhost;

  # ~2 seconds is often enough for most folks to parse HTML/CSS and
  # retrieve needed images/icons/frames, connections are cheap in
  # nginx so increasing this is generally safe...
  keepalive_timeout 5;

  location / {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    proxy_pass http://barkeep;
  }

  # Cache assets served by Pinion from /assets
  location /assets {
    proxy_cache assets;
    proxy_pass http://barkeep;
  }
}
