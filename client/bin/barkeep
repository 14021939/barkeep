#!/usr/bin/env ruby

require "rubygems"
require "dedent"
require "yaml"

require "barkeep/configuration"
require "barkeep/version"

COMMANDS = {
  "commit" => "Get information about a particular commit.",
  "unapproved" => "Find unapproved commits from a list or commit range.",
  "view" => "View a barkeep commit page in your browser."
}

COMMANDS.keys.each { |command| require "barkeep/#{command}" }

def usage(exit_status)
  puts <<-EOS.dedent
    Usage:
        $ barkeep <command> [args]
    where <command> is one of:
  EOS
  COMMANDS.each { |command, purpose| puts "    #{command.rjust(COMMANDS.keys.map(&:size).max)} | #{purpose}" }
  puts <<-EOS.dedent

    Type 'barkeep <command> --help' for more information about a particular command.
  EOS
  exit exit_status
end

sub_command = ARGV.shift

usage(0) if ["--help", "help", "-h"].include? sub_command
if ["-v", "--version"].include? sub_command
  puts "barkeep-client version #{BarkeepClient::VERSION}"
  exit
end
unless COMMANDS.include? sub_command
  puts sub_command ? "Error: unrecognized command '#{sub_command}'" : "Error: must provide command."
  puts
  usage(1)
end

begin
  configuration = BarkeepClient.get_configuration
rescue RuntimeError => e
  puts e.message
  exit 1
end

# Delegate to the trollop parsing + client logic that lives in the appropriate subcommand file.
BarkeepClient::Commands.send sub_command.to_sym, configuration
