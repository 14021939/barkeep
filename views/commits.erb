<script>
  Function.prototype.proxy = function(thisObject) { return jQuery.proxy(this, thisObject); };

  // TODO(dmac): Put these constants in a common js file.
  var KEY_RETURN = 13;
  var KEY_ESC = 27;
  var KEY_SLASH =  191;
  var KEY_J =  74;
  var KEY_K =  75;

  CommitSearch = {
    init: function() {
      $("#commitSearch .submit").click(this.onSearchClick.proxy(this));
      $("#commitSearch input[name=filter_value]").focus();
      $("#commitSearch input[name=filter_value]").keydown(this.onKeydownInSearchbox.proxy(this));
      $(document).keydown(this.onKeydown.proxy(this));
      $(".savedSearch:first-of-type .commitsList tr:first-of-type").addClass("selected");
    },

    onSearchClick: function() {
      $("#commitSearch input[name=filter_value]").blur();
      var authors = $("#commitSearch input[name=filter_value]").val();
      if (!authors) return;
      var queryParams = { authors: authors };
      jQuery.post("/saved_searches", queryParams, this.onSearchSaved.proxy(this));
    },

    onSearchSaved: function(responseHtml) {
      $("#savedSearches").prepend(responseHtml);
      $(".selected").removeClass("selected");
      $(".savedSearch:first-of-type .commitsList tr:first-of-type").addClass("selected");
    },

    onKeydownInSearchbox: function(event) {
      event.stopPropagation();
      if (event.which == KEY_RETURN)
        this.onSearchClick();
      else if (event.which == KEY_ESC)
        $("#commitSearch input[name=filter_value]").blur();
    },

    onKeydown: function(event) {
      //console.log(event.which);
      event.stopPropagation();
      if (event.which == KEY_SLASH) {
        $("#commitSearch input[name=filter_value]").focus();
        return false;
      } else if (event.which == KEY_J) {
        this.selectNextDiff();
      } else if (event.which == KEY_K) {
        this.selectPreviousDiff();
      }
    },

    selectNextDiff: function() {
      // TODO(dmac): If a savedSearch group has no diffs, navigation won't skip over it.
      var newlySelected = $(".selected").next();
      if (newlySelected.size() == 0) {
        newlySelected = $(".selected").parents(".savedSearch").next().find("tr:first-of-type");
        newlySelected = newlySelected.size() > 0 ? newlySelected : $(".selected");
      }
      $(".selected").removeClass("selected");
      newlySelected.addClass("selected");
    },

    selectPreviousDiff: function() {
      // TODO(dmac): If a savedSearch group has no diffs, navigation won't skip over it.
      var newlySelected = $(".selected").prev();
      if (newlySelected.size() == 0) {
        newlySelected = $(".selected").parents(".savedSearch").prev().find("tr:last-of-type");
        newlySelected = newlySelected.size() > 0 ? newlySelected : $(".selected");
      }
      $(".selected").removeClass("selected");
      newlySelected.addClass("selected");
    }
  }

  $(document).ready(function() { CommitSearch.init(); });
</script>

<!-- These options apply to all commit lists shown on the page. -->
<div id="filterControls">
  <select name="date_selection">
    <option value="three_days">Last 3 days</option>
    <option value="one_week">Last 1 week</option>
    <option value="one_week">Last 2 weeks</option>
    <option value="one_week" selected>Last 1 month</option>
    <option value="one_week">Last 6 months</option>
    <option value="all_time">All time</option>
  </select>
  <br/>
  <span id="showUnreviewedOnly">
    <input type="checkbox" id="unreviewedOnlyCheckbox"></input>
    <label for="unreviewedOnlyCheckbox">Unreviewed only</label>
  </span>
</div>

<div id="commitSearch">
  <table>
    <tr>
      <td>Search by</td>
      <td>
        <select name="filter_type">
          <option value="authors">authors</option>
          <option value="directories">directories</option>
          <option value="repository">repository</option>
        </select>
      </td>
      <td>
        <input type="text" name="filter_value" value="" />
      </td>
      <td><button class="submit">Search</button></td>
    </tr>
    <tr>
      <td></td>
      <td></td>
      <td><div class="example">separate authors by commas</div></td>
      <td></td>
    </tr>
  </table>
</div>

<div id="savedSearches">
  <% saved_searches.each do |saved_search| %>
    <%= erb :_saved_search, :layout => false, :locals => { :saved_search => saved_search, :repo => repo } %>
  <% end %>
</div>
