<%#
  An admin view showing the list of monitored repos, with controls for adding and deleting.
  Params:
    - repos_hashes: an array of repo hashes of the form { :git_repo, :newest_commit }.
%>

<script>
  $(document).ready(function() {
    var showConfirmationMessage = function(message) {
      $("#confirmationMessage").show();
      $("#confirmationMessage").html(message);
    };

    $("button#clone").click(function() {
      var repoUrl = $("#newRepoUrl").val();
      $.ajax({
        type: "post",
        url: "/admin/repos/create_new_repo",
        data: { url: repoUrl },
        dataType: "json",
        success: function() { showConfirmationMessage(repoUrl + " has been scheduled to be cloned.") },
        error: function(response) { showConfirmationMessage(response.responseText); }
      });
    });

    $(".trash").click(function(e) {
      var repoRow = $(e.target).closest("tr");
      var repoName = repoRow.find("td:nth-of-type(1)").html();
      var repoUrl = repoRow.find("td:nth-of-type(2)").html();
      if(confirm("Are you sure you want to delete this repository?\n\n" + repoName + "\n" + repoUrl)) {
        $.ajax({
          type: "post",
          url: "/admin/repos/delete_repo",
          data: { name: repoName },
          success: function() { showConfirmationMessage(repoName + " has been scheduled for deletion."); },
          error: function(response) { showConfirmationMessage(response.responseText); }
        })
      }
    });
  });
</script>

<div id="repos">

  <%= admin_page_breadcrumb "Manage repositories" %>

  <div id="confirmationMessage"></div>

  <h2>Add new repo</h2>
  <div id="cloneForm">
    <label for="newRepoUrl">Repo url</label><br/>
    <input type="text" id="newRepoUrl" />
    <button id="clone" class="standard">Add repo</button><br/>
    <span class="note">e.g. http://github.com/ooyala/barkeep.git</span><br/>
    <p class="note">This repo will be cloned into <code><%= REPOS_ROOT %></code></p>
  </div>

  <% unless repos_being_cloned.empty? %>
    <h2>Repos scheduled to be cloned</h2>
    <%= repos_being_cloned.join("<br/>") %>
  <% end %>

  <h2>Repos currently monitored</h2>

  <table id="repoList">
    <th>Name</th>
    <th>URL</th>
    <th>Newest fetched commit</th>

    <% repos_hashes.each do |repo_hash| %>
      <tr>
        <td><%= repo_hash[:grit_repo].name %></td>
        <td><%= repo_hash[:grit_repo].origin_url %></td>
        <td>
          <% grit_commit = repo_hash[:newest_commit] ? repo_hash[:newest_commit].grit_commit : nil %>
          <% if grit_commit %>
            <a href="<%= grit_commit.link %>" class="commitSha"><%= grit_commit.id_abbrev %></a>
            <span class="commitDate"><%= grit_commit.date.to_pretty %></span><br/>
            <%= grit_commit.author %>
          <% end %>
        </td>
        <td><div class="trash"></div></td>
      </tr>
    <% end %>

  </table>

  <h2>Repo pulling and cloning logs</h2>

  <p>
    This is activity logged from the Resque background jobs responsible for cloning new repos and running
    "git fetch" for all existing repos. Use these logs to debug if one of your repos isn't able to be cloned
    or isn't getting updated.
  </p>

  <p>
    <strong><a href="/admin/log/clone_new_repo.log">clone_new_repo.log</a></strong>
    <div class="logFile">
      <%= clone_new_repo_log.gsub("\n", "<br/>") %>
    </div>
  </p>

  <p>
    <strong><a href="/admin/log/fetch_commits.log">fetch_commits.log</a></strong>
    <div class="logFile">
      <%= fetch_commits_log.gsub("\n", "<br/>") %>
    </div>
  </p>

</div>
